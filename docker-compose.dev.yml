# Docker Compose สำหรับ Development บน Windows
# ใช้ pre-built images เพื่อหลีกเลี่ยงการ build ที่ใช้เวลานาน

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: ibit-repair-db-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: ibit_repair
      POSTGRES_USER: ibit_user
      POSTGRES_PASSWORD: ibit_secure_password_2025
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ibit-network-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ibit_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (Development Mode)
  backend:
    image: node:20-alpine
    container_name: ibit-repair-backend-dev
    restart: unless-stopped
    working_dir: /app
    command: sh -c "npm install && npm run dev"
    environment:
      DATABASE_URL: postgresql://ibit_user:ibit_secure_password_2025@postgres:5432/ibit_repair
      JWT_SECRET: ibit_jwt_secret_key_64_characters_minimum_for_production_security_2025
      JWT_REFRESH_SECRET: ibit_jwt_refresh_secret_key_64_characters_minimum_for_production_security_2025
      SESSION_SECRET: ibit_session_secret_key_64_characters_minimum_for_production_security_2025
      NODE_ENV: development
      PORT: 4000
      CORS_ORIGINS: http://localhost:3000,http://127.0.0.1:3000,http://192.168.1.0/24,http://10.0.0.0/8,http://172.16.0.0/12
    volumes:
      - ./backend:/app
      - backend_node_modules_dev:/app/node_modules
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ibit-network-dev

  # Frontend (Development Mode)
  frontend:
    image: node:20-alpine
    container_name: ibit-repair-frontend-dev
    restart: unless-stopped
    working_dir: /app
    command: sh -c "npm install && npm run dev"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:4000
      NODE_ENV: development
    volumes:
      - ./frontend:/app
      - frontend_node_modules_dev:/app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - ibit-network-dev

  # Redis (สำหรับ caching)
  redis:
    image: redis:7-alpine
    container_name: ibit-repair-redis-dev
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data_dev:/data
    ports:
      - "6379:6379"
    networks:
      - ibit-network-dev

volumes:
  postgres_data_dev:
    name: ibit-repair-postgres-data-dev
  redis_data_dev:
    name: ibit-repair-redis-data-dev
  backend_node_modules_dev:
    name: ibit-repair-backend-node-modules-dev
  frontend_node_modules_dev:
    name: ibit-repair-frontend-node-modules-dev

networks:
  ibit-network-dev:
    name: ibit-repair-network-dev
    driver: bridge