# Docker Compose สำหรับ Production (NAS Synology)
# ไฟล์นี้ใช้สำหรับ deploy ระบบทั้งหมดบน NAS

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: ibit-repair-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ibit_repair
      POSTGRES_USER: ibit_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}  # ดึงจาก .env file
    volumes:
      # Mount ไปที่ NAS volume เพื่อเก็บข้อมูลถาวร
      - /volume1/ibit-repair/postgres-data:/var/lib/postgresql/data
    networks:
      - ibit-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ibit_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (Express + Prisma)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ibit-repair-backend
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://ibit_user:${DB_PASSWORD}@postgres:5432/ibit_repair
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: 86400  # 24 ชั่วโมง
      NODE_ENV: production
      PORT: 4000
    volumes:
      # Mount folder สำหรับเก็บไฟล์รูปภาพที่ upload
      - /volume1/ibit-repair/uploads:/app/uploads
      # Mount folder สำหรับเก็บ backup
      - /volume1/ibit-repair/backups:/app/backups
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ibit-network

  # Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ibit-repair-frontend
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_API_URL: https://yourdomain.com/api  # URL ของ backend ผ่าน nginx
      NODE_ENV: production
    depends_on:
      - backend
    networks:
      - ibit-network

  # Nginx Reverse Proxy
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: ibit-repair-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot
      - nginx_logs:/var/log/nginx
    depends_on:
      - backend
      - frontend
    networks:
      - ibit-network

  # Redis (สำหรับ caching - Optional)
  redis:
    image: redis:7-alpine
    container_name: ibit-repair-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - ibit-network

# Named volumes สำหรับเก็บข้อมูล
volumes:
  postgres_data:
    name: ibit-repair-postgres-data
  redis_data:
    name: ibit-repair-redis-data
  nginx_logs:
    name: ibit-repair-nginx-logs

# Network สำหรับให้ containers สื่อสารกัน
networks:
  ibit-network:
    driver: bridge

